<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-KSUDC9C" failures="3" tests="3" name="Sanity" time="15.263" errors="0" timestamp="2022-03-03T13:46:05 IST">
  <testcase classname="com.trainermanagement.scripts.TestClass" name="Signup" time="0.195">
    <failure type="org.openqa.selenium.InvalidSelectorException" message="Compound class names not permitted
For documentation on this error, please visit: https://selenium.dev/exceptions/#invalid_selector_exception
Build info: version: &amp;apos;4.0.0-beta-1&amp;apos;, revision: &amp;apos;9c03156c2b&amp;apos;
System info: host: &amp;apos;DESKTOP-KSUDC9C&amp;apos;, ip: &amp;apos;192.168.1.205&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;16.0.2&amp;apos;
Driver info: driver.version: unknown">
      <![CDATA[org.openqa.selenium.InvalidSelectorException: Compound class names not permitted
For documentation on this error, please visit: https://selenium.dev/exceptions/#invalid_selector_exception
Build info: version: '4.0.0-beta-1', revision: '9c03156c2b'
System info: host: 'DESKTOP-KSUDC9C', ip: '192.168.1.205', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: driver.version: unknown
at org.openqa.selenium.By$ByClassName.<init>(By.java:310)
at org.openqa.selenium.By.className(By.java:100)
at org.openqa.selenium.support.AbstractFindByBuilder.buildByFromShortFindBy(AbstractFindByBuilder.java:43)
at org.openqa.selenium.support.FindBy$FindByBuilder.buildIt(FindBy.java:85)
at org.openqa.selenium.support.pagefactory.Annotations.buildBy(Annotations.java:79)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.<init>(DefaultElementLocator.java:58)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.<init>(DefaultElementLocator.java:46)
at org.openqa.selenium.support.pagefactory.DefaultElementLocatorFactory.createLocator(DefaultElementLocatorFactory.java:33)
at org.openqa.selenium.support.pagefactory.DefaultFieldDecorator.decorate(DefaultFieldDecorator.java:57)
at org.openqa.selenium.support.PageFactory.proxyFields(PageFactory.java:110)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:102)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:89)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:77)
at com.trainermanagement.pages.SignUp.<init>(SignUp.java:41)
at com.trainermanagement.scripts.TestClass.Signup(TestClass.java:70)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
... Removed 18 stack frames]]>
    </failure>
  </testcase> <!-- Signup -->
  <testcase classname="com.trainermanagement.scripts.TestClass" name="verifyValidLogin" time="1.18">
    <failure type="java.lang.IllegalStateException" message="Cannot get a STRING value from a NUMERIC cell">
      <![CDATA[java.lang.IllegalStateException: Cannot get a STRING value from a NUMERIC cell
at org.apache.poi.xssf.usermodel.XSSFCell.typeMismatch(XSSFCell.java:1022)
at org.apache.poi.xssf.usermodel.XSSFCell.getRichStringCellValue(XSSFCell.java:393)
at org.apache.poi.xssf.usermodel.XSSFCell.getStringCellValue(XSSFCell.java:342)
at com.trainermanagement.utilities.ExcelUtility.getCellData(ExcelUtility.java:23)
at com.trainermanagement.scripts.TestClass.verifyValidLogin(TestClass.java:54)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
... Removed 18 stack frames]]>
    </failure>
  </testcase> <!-- verifyValidLogin -->
  <testcase classname="com.trainermanagement.scripts.TestClass" name="verifyinValidLogin" time="0.125">
    <failure type="java.lang.IllegalStateException" message="Cannot get a STRING value from a NUMERIC cell">
      <![CDATA[java.lang.IllegalStateException: Cannot get a STRING value from a NUMERIC cell
at org.apache.poi.xssf.usermodel.XSSFCell.typeMismatch(XSSFCell.java:1022)
at org.apache.poi.xssf.usermodel.XSSFCell.getRichStringCellValue(XSSFCell.java:393)
at org.apache.poi.xssf.usermodel.XSSFCell.getStringCellValue(XSSFCell.java:342)
at com.trainermanagement.utilities.ExcelUtility.getCellData(ExcelUtility.java:23)
at com.trainermanagement.scripts.TestClass.verifyinValidLogin(TestClass.java:33)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
... Removed 18 stack frames]]>
    </failure>
  </testcase> <!-- verifyinValidLogin -->
</testsuite> <!-- Sanity -->
